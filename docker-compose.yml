version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: library_app
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./uploads:/var/www/html/uploads
    depends_on:
      - db
    networks:
      - library_network
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

  db:
    image: mysql:8.0
    container_name: library_db
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - library_network
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: library_phpmyadmin
    restart: always
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - library_network
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - UPLOAD_LIMIT=100M

networks:
  library_network:
    driver: bridge

volumes:
  db_data:
  uploads: